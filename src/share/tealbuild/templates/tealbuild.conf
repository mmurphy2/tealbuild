#############################################################################
##                            Basic Settings                               ##
#############################################################################

# Path to the GPG executable (gpg2)
GPG=/usr/bin/gpg2

# TEALBUILD_ROOT is mostly for convenience, so that other paths may be set
# relative to it.
TEALBUILD_ROOT="{{ TEALBUILD_ROOT }}"

# Directory for the build VM.
TEALBUILD_VM="${TEALBUILD_ROOT}/buildvm"

# GPG home directory for repository keys.
GPG_HOME="${TEALBUILD_ROOT}/gpg"

# Path to the ports collection (directories containing build scripts for each
# package). Each directory within the ports collection is named the same as
# the name of the package that is to be built.
PORTS="${TEALBUILD_ROOT}/ports"

# Path to the location where the source code for each package is downloaded
# and/or stored. This path is separate from the PORTS, so that source files
# are cached independently of the scripts that control the builds.
SOURCES="${TEALBUILD_ROOT}/sources"

# Path to the staging directory, where newly built binary packages are put
# prior to signing and acceptance into the repository.
STAGE="${TEALBUILD_ROOT}/stage"

# Path to the local package repository, where built packages will be put
# after signing and acceptance.
REPO="${TEALBUILD_ROOT}/repo"

# Path to the repository archive, where previous versions of packages are
# moved after removing them from the repository.
ARCHIVE="${TEALBUILD_ROOT}/archive"

# Path to the trash directory, where logs of failed builds and packages
# rejected from staging are moved.
TRASH="${TEALBUILD_ROOT}/trash"

# Path to the local mirror of the Slackware tree. This tree is used to build
# custom installer ISO files, such as is needed when building for -current.
SLACKWARE="{{ SLACKWARE }}"

# Upstream rsync server from which to mirror the Slackware tree. Omit the
# trailing slash, as this URL will be appended to mirror only the version
# specifically requested.
SLACKWARE_UPSTREAM="{{ SLACKWARE_UPSTREAM }}"

# Path to the local git clone of SlackBuilds.org
SBO="{{ SBO }}"

# Information about the person or entity building the package.
PACKAGER_NAME="{{ PACKAGER_NAME }}"
COPYRIGHT_OWNER="{{ COPYRIGHT_OWNER }}"
PACKAGER_EMAIL="{{ PACKAGER_EMAIL }}"

# Build architecture (note that the VM must be installed with the correct
# edition of Slackware!)
ARCH="{{ ARCH }}"

# Default tag and package type for built packages.
TAG="{{ TAG }}"
PKGTYPE="{{ PKGTYPE }}"

# Pager to use when displaying help or tutorial output.
TEALBUILD_PAGER="{{ TEALBUILD_PAGER }}"


#############################################################################
##                      Virtual Machine Settings                           ##
#############################################################################
## All packages are built inside a QEMU virtual machine. This section sets ##
## path and configuration information for the VM. To install the VM, run   ##
## tealbuild install-vm with a Slackware(64) ISO file.                     ##
#############################################################################

# Path to the build VM image and image type. The image type must be supported
# by QEMU.
VM_IMAGE="${TEALBUILD_VM}/vm-${ARCH}.qcow2"
VM_IMAGE_FORMAT="qcow2"

# Size of the VM image if it does not already exist. This size must be in
# a format supported by qemu-img(1).
VM_IMAGE_SIZE="80G"

# Disk image attachment type. Use ide for Slackware versions prior to 15.0.
# For Slackware 15.0 and higher, virtio may be used instead.
VM_DISK_TYPE="ide"

# QEMU machine type to emulate for the build system. This value may need to
# be changed if using a version of QEMU older or significantly newer than
# version 6.0.
VM_SYSTEM="pc-q35-6.0"

# VM CPU settings. These are provided so that the virtual CPU can be
# adjusted for the capabilities of the host system. Note that the CPU type
# (VM_CPU) must be set to host if kvm will be used.
VM_CPU="{{ VM_CPU }}"
VM_CPU_COUNT={{ VM_CPU_COUNT }}
VM_CPU_CORES_PER_CPU={{ VM_CPU_CORES_PER_CPU }}
VM_CPU_THREADS_PER_CORE={{ VM_CPU_THREADS_PER_CORE }}

# VM acceleration. Recommended: kvm (but be sure your user has access to
# /dev/kvm to be able to use it)
VM_ACCEL={{ VM_ACCEL }}

# Amount of RAM (in MiB) to give to the VM.
VM_RAM={{ VM_RAM }}

# MAC address for the build VM NAT network adapter. This address is
# locally assigned, so the two's bit of the first byte should be set.
VM_MAC="{{ VM_MAC }}"

# VM NAT network adapter type
VM_NIC_MODEL="{{ VM_NIC_MODEL }}"

# VM virtual graphics card type and display output setting
VM_VGA="virtio"
VM_DISPLAY="gtk"

# Socket file that will be created for managing the VM while building.
VM_MONITOR_PORT=7142

# Extra options to ncat(1). Some versions need -N to work properly.
NCAT_OPTIONS=""

# Communication with the VM occurs via SSH, using pubkey authentication as
# the root user. These settings configure the local port to be forwarded to
# the SSH server inside the VM, as well as the path to the SSH key. Note that
# rc.sshd must be enabled inside the VM so that sshd is started at boot.
VM_SSH_PORT={{ VM_SSH_PORT }}
SSH_ROOT_KEY="${TEALBUILD_VM}/id_rsa"

# Custom extra settings for the QEMU VM
VM_EXTRA_SETTINGS="{{ VM_EXTRA_SETTINGS }}"

# TealBuild can start the VM in snapshot mode automatically when performing a
# package build. To enable automatic start, set AUTOSTART_VM to "yes". After
# starting, wait up to AUTOSTART_VM_TIMEOUT seconds to establish an SSH
# connection to the build VM (it is wise to adjust the bootloader settings
# inside the VM to shorten the boot time, allowing this value to be lowered
# from its 5 minute default).
AUTOSTART_VM="{{ AUTOSTART_VM }}"
AUTOSTART_VM_TIMEOUT={{ AUTOSTART_VM_TIMEOUT }}

# If AUTOSTART_VM is "yes" and the VM is automatically started for a build,
# TealBuild can stop the VM at the end of the build.
#
# Possible values for AUTOSTOP_VM are:
#
# always      -  Always stop the VM after a build is completed
# never       -  Never stop the VM after a build is completed
# on_success  -  Automatically stop the VM only if the build succeeds
# on_error    -  Automatically stop the VM if the build fails
AUTOSTOP_VM="{{ AUTOSTOP_VM }}"


#############################################################################
##                          Remote Repository                              ##
#############################################################################
## If tealbuild will be used to create packages for a remote repository    ##
## (e.g. accessible via the Internet or an intranet), this section sets    ##
## options that may be used to synchronize the remote repository with the  ##
## local repository.                                                       ##
#############################################################################

# If repository upload is enabled, remote path (or locally-mounted path) into
# which the repository should be placed.
REPO_REMOTE_PATH=""

# When the remote repository is not locally mounted, set the host, port
# (default is 22), and username for the SSH connection.
REPO_SSH_HOST=""
REPO_SSH_PORT=22
REPO_SSH_USER=""


#############################################################################
##                                Testing                                  ##
#############################################################################

# TealBuild can start a test server for the purpose of checking that the
# repository works correctly with tools installed in the VM. These settings
# adjust the listen address and port of the server, respectively. Note that
# this server is only for testing and should not be used for production.
REPO_SERVER_ADDRESS="127.0.0.1"
REPO_SERVER_PORT=8018


#############################################################################
##                              Miscellaneous                              ##
#############################################################################

# Normally, these variables should be set in the local environment for
# specific use cases. However, they are available to be set here if desired.
#
# Uncomment the following line to include the BUILD_REQUIRES items each time
# tealbuild requires is run:
# TEALBUILD_REQUIRES="build"
#
# Uncomment the following line to make all builds interactive:
# TEALBUILD_INTERACTIVE="yes"
